<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-persist-*.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-web-mvc.xml</param-value>
        </init-param>
        <!--Servlet默认生命周期中，创建对象是第一次接收到请求，而DispatcherServlet创建对象后有大量的“框架初始化”工作，不适合第一次请求时创建对象-->
        <!--    设置load-on-startup就是为了让DispatcherServlet在Web应用启动时创建-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <!--url-pattern配置方式一：/表示拦截所有请求-->
        <!--url-pattern配置方式二：配置请求扩展名-->
        <!--优点1：静态资源完全不经过springMVC，不需要经过特殊处理-->
        <!--优点2：可以实现伪静态效果，表面上看起来是访问一个html文件这样的静态资源，但实际上是经过java代码运算的页面-->
        <!--伪静态作用1：给黑客入侵增加难度-->
        <!--伪静态作用2：有利于SEO的优化（让百度、谷歌这样的搜索引擎更容易找到我们的项目）-->
        <!--伪静态缺点：不符合RESTFul风格-->
        <!--<url-pattern>/</url-pattern>-->
        <url-pattern>*.html</url-pattern>
        <!--响应json-->
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
</web-app>
